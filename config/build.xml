<?xml version="1.0"?>

<!--
  - Copyright 2008-2009 Vladimir Ritz Bossicard
  -
  - This file is part of WorkingOnIt.
  -
  - WorkingOnIt is free software: you can redistribute it and/or modify it
  - under the terms of the GNU Lesser General Public License as published by
  - the Free Software Foundation, either version 3 of the License, or (at your
  - option) any later version.
  -
  - This program is distributed in the hope that it will be useful, but WITHOUT
  - ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
  - FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License
  - for more details.
  -
  - You should have received a copy of the GNU Lesser General Public License
  - along with this program. If not, see <http://www.gnu.org/licenses/>.
  -
  - Author      : Vladimir Ritz Bossicard
  - Version     : $Revision: 380 $
  - Last edit   : $Date: 2010-03-23 09:25:01 +0100 (Tue, 23 Mar 2010) $
  - Last editor : $Author: vbossica $
  -->

<!DOCTYPE project>

<project name="wkg config" basedir="." default="publish"
        xmlns:project="antlib:org.workingonit.project"
        xmlns:docbook="antlib:org.workingonit.docbook"
        xmlns:roundup="antlib:org.workingonit.roundup">
    
    <property file="build-local.properties"/>
    <property file="build.properties"/>
    
    <import file="conf/ant/project-targets.xml"/>
    <import file="conf/ant/docbook-targets.xml"/>

    <typedef file="src/antlib/project.xml" uri="antlib:org.workingonit.project"/>
    <typedef file="src/antlib/docbook.xml" uri="antlib:org.workingonit.docbook"/>
    <typedef file="src/antlib/roundup.xml" uri="antlib:org.workingonit.roundup"/>

    <target name="init">
        <project:init ivysettings="conf/ivy/ivysettings.xml"/>
    </target>

    <target name="package" depends="init">
        <jar destfile="${dist.dir}/org.workingonit.${project.name}-${project.version}.jar">
            <zipfileset dir="src/antlib" includes="*.xml" prefix="org/workingonit/antlib"/>
        </jar>
        <copy file="${dist.dir}/org.workingonit.${project.name}-${project.version}.jar" 
            tofile="${dist.dir}/org.workingonit.${project.name}.jar"/>
    </target>

    <target name="publish" depends="package">
        <project:publish/>
    	<copy file="${dist.dir}/org.workingonit.${project.name}.jar" todir="${ant.home}/lib"/>
    </target>

    <target name="retrieve" description="retrives the ivy dependencies">
        <project:init ivyfile="ivy-retrieve.xml" ivysettings="conf/ivysettings.xml"/>
    </target>
    
    <target name="roundup" description="generates roundup config files (dev purposes)">

        <!--
          - The source configuration files can either be "private" (i.e. not 
          - contributed back to the roundup project) and written in the
          - src/roundup directory...
          -
        <roundup:ivyfiles srcDir="src/roundup" org="" name="" rev=""/>
          -->
        <roundup:ivyfiles srcDir="src/roundup" org="org.apache.cassandra" name="cassandra" rev="0.5.1"/>
        
        <!--
          - or contributed back via a patch to the roundup project. In that 
          - case the source configuration files are written directly into the
          - checked-out roundup repository ${ivyroundup.home}.
          -
          - example:
          -    <roundup:ivyfiles organisation="org.testng" module="testng" revision="5.8"/>
        <roundup:ivyfiles org="" name="" rev=""/>
        <roundup:ivyfiles org="org.jgroups" name="jgroups" rev="2.7.0"/>
        <roundup:ivyfiles org="com.google" name="gwt" rev="2.0.3"/>
          -->
    </target>
    
    <target name="sha1" description="calculates sha1 for all cached files">
        <roundup:sha1/>
    </target>

    <target name="test.pdf"  description="tests pdf output (Docbook)">
        <!--
        <xslt basedir="src/docbook" includes="*-titlepage-fo.xml"
            destdir="src/docbook/fo" force="true"
            extension=".xsl" style="${docbook.home}/template/titlepage.xsl"/>

        <java classname="com.icl.saxon.StyleSheet"
                fork="yes"
                dir="."
                failonerror="true">
            <classpath refid="endorsed.classpath" />
            <jvmarg line="-Dorg.apache.xerces.xni.parser.XMLParserConfiguration=org.apache.xerces.parsers.XIncludeParserConfiguration"/>
            <jvmarg line="-Djavax.xml.parsers.DocumentBuilderFactory=org.apache.xerces.jaxp.DocumentBuilderFactoryImpl"/>
            <jvmarg line="-Djavax.xml.parsers.SAXParserFactory=org.apache.xerces.jaxp.SAXParserFactoryImpl"/>
            <arg line="-o conf/docbook/article-titlepage-fo.xsl"/>
            <arg line="src/docbook/article-titlepage-fo.xml ${docbook.home}/template/titlepage.xsl"/>
        </java>
        -->

        <docbook:pdf.generate file="workingonit" draft="yes"/>
    </target>

    <target name="test.html" description="tests html output (Docbook)">
        <copy todir="${target.dir}/docbook" overwrite="true">
            <fileset dir="conf/docbook" includes="*html.xsl, *.css"/>
            <filterset>
                <filter token="DOCBOOK.HOME" value="${docbook.home}"/>
                <filter token="DOCBOOK.WKG.HOME" value="${file.protocol}${docbook.wkg.home}"/>
            </filterset>
        </copy>
        <docbook:file.html.generate 
            html-stylesheet.home="${target.dir}/docbook"
            html-stylesheet="article-html.xsl"
            file="workingonit"/>
    </target>

    <target name="install" description="install the docbook templates locally">
        <mkdir dir="${docbook.wkg.home}"/>
        <copy todir="${docbook.wkg.home}/docbook-custom-xsl" overwrite="true">
            <fileset dir="src/docbook" includes="eclipse/**, fo/**, html/**, images/**"/>
        </copy>
        <copy todir="${docbook.wkg.home}/docbook-custom-xsl/fo/images" overwrite="true">
            <fileset dir="src/docbook/images"/>
        </copy>
        <copy todir="${docbook.wkg.home}/docbook-xsl" overwrite="false">
        	<fileset dir="${docbook.home}"/>
        </copy>
        <copy todir="${docbook.wkg.home}/lib" flatten="true" overwrite="true">
        	<fileset dir="${lib.dir}/docbook" includes="**/*.jar"/>
        </copy>
    </target>

</project>
